// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/chat/chat.proto

package chatv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Context struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Context) Reset() {
	*x = Context{}
	mi := &file_v1_chat_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_v1_chat_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Context) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Context) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *Context               `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"` // Who's asking
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // User's plain text question
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_v1_chat_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ChatRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *Context               `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`                                                                                 // Echo original context for trace
	Operation     string                 `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`                                                                             // What the LLM classified this as
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Any parameters (e.g., timeframe)
	Answer        string                 `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`                                                                                   // Final human-readable answer from your safe backend logic
	PlanJson      string                 `protobuf:"bytes,5,opt,name=plan_json,json=planJson,proto3" json:"plan_json,omitempty"`                                                               // (Optional) Raw plan JSON from LLM for logging/debug
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_v1_chat_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatResponse) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ChatResponse) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ChatResponse) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ChatResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ChatResponse) GetPlanJson() string {
	if x != nil {
		return x.PlanJson
	}
	return ""
}

var File_v1_chat_chat_proto protoreflect.FileDescriptor

const file_v1_chat_chat_proto_rawDesc = "" +
	"\n" +
	"\x12v1/chat/chat.proto\x12\achat.v1\"\xba\x01\n" +
	"\aContext\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12:\n" +
	"\bmetadata\x18\x03 \x03(\v2\x1e.chat.v1.Context.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\vChatRequest\x12*\n" +
	"\acontext\x18\x01 \x01(\v2\x10.chat.v1.ContextR\acontext\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x93\x02\n" +
	"\fChatResponse\x12*\n" +
	"\acontext\x18\x01 \x01(\v2\x10.chat.v1.ContextR\acontext\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\x12E\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2%.chat.v1.ChatResponse.ParametersEntryR\n" +
	"parameters\x12\x16\n" +
	"\x06answer\x18\x04 \x01(\tR\x06answer\x12\x1b\n" +
	"\tplan_json\x18\x05 \x01(\tR\bplanJson\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012B\n" +
	"\vChatService\x123\n" +
	"\x04Chat\x12\x14.chat.v1.ChatRequest\x1a\x15.chat.v1.ChatResponseB@Z>github.com/studyguides-com/study-guides-api/api/v1/chat;chatv1b\x06proto3"

var (
	file_v1_chat_chat_proto_rawDescOnce sync.Once
	file_v1_chat_chat_proto_rawDescData []byte
)

func file_v1_chat_chat_proto_rawDescGZIP() []byte {
	file_v1_chat_chat_proto_rawDescOnce.Do(func() {
		file_v1_chat_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_chat_chat_proto_rawDesc), len(file_v1_chat_chat_proto_rawDesc)))
	})
	return file_v1_chat_chat_proto_rawDescData
}

var file_v1_chat_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_v1_chat_chat_proto_goTypes = []any{
	(*Context)(nil),      // 0: chat.v1.Context
	(*ChatRequest)(nil),  // 1: chat.v1.ChatRequest
	(*ChatResponse)(nil), // 2: chat.v1.ChatResponse
	nil,                  // 3: chat.v1.Context.MetadataEntry
	nil,                  // 4: chat.v1.ChatResponse.ParametersEntry
}
var file_v1_chat_chat_proto_depIdxs = []int32{
	3, // 0: chat.v1.Context.metadata:type_name -> chat.v1.Context.MetadataEntry
	0, // 1: chat.v1.ChatRequest.context:type_name -> chat.v1.Context
	0, // 2: chat.v1.ChatResponse.context:type_name -> chat.v1.Context
	4, // 3: chat.v1.ChatResponse.parameters:type_name -> chat.v1.ChatResponse.ParametersEntry
	1, // 4: chat.v1.ChatService.Chat:input_type -> chat.v1.ChatRequest
	2, // 5: chat.v1.ChatService.Chat:output_type -> chat.v1.ChatResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v1_chat_chat_proto_init() }
func file_v1_chat_chat_proto_init() {
	if File_v1_chat_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_chat_chat_proto_rawDesc), len(file_v1_chat_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_chat_chat_proto_goTypes,
		DependencyIndexes: file_v1_chat_chat_proto_depIdxs,
		MessageInfos:      file_v1_chat_chat_proto_msgTypes,
	}.Build()
	File_v1_chat_chat_proto = out.File
	file_v1_chat_chat_proto_goTypes = nil
	file_v1_chat_chat_proto_depIdxs = nil
}
